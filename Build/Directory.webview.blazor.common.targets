<Project Sdk="Microsoft.NET.Sdk.Razor" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<!-- Project Properties --><!--
	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		--><!-- These settings enable the Razor/Blazor static web assets system --><!--
		<StaticWebAssetBasePath>/</StaticWebAssetBasePath>
		<StaticWebAssetProjectMode>Root</StaticWebAssetProjectMode>
	</PropertyGroup>

	--><!-- Import the Razor SDK targets --><!--
	<Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk.Razor" />

	--><!-- Reâ€‘enable the Static Web Assets Pipeline with the fix (escape problematic characters) --><!--
	<Target Name="_StaticWebAssetsComputeFilesToBuild"
			AfterTargets="GetCopyToOutputDirectoryItems"
			DependsOnTargets="ResolveProjectReferences">
		<ItemGroup>
			--><!-- Process external static web assets --><!--
			<_ExternalBuildStaticWebAsset Include="%(StaticWebAsset.FullPath)" Condition="'%(SourceType)' != ''">
				<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
				<TargetPath>
					$([MSBuild]::MakeRelative(
					'$(MSBuildProjectDirectory)',
					$([MSBuild]::Escape($([MSBuild]::NormalizePath('wwwroot\%(BasePath)\%(RelativePath)'))))
					))
				</TargetPath>
			</_ExternalBuildStaticWebAsset>

			--><!-- Remove then re-add to ensure proper output --><!--
			<_SourceItemsToCopyToOutputDirectory Remove="@(_ExternalBuildStaticWebAsset)" />
			<_SourceItemsToCopyToOutputDirectory Include="@(_ExternalBuildStaticWebAsset)" />
		</ItemGroup>
	</Target>

	--><!-- Remove the development manifest to avoid accidental inclusion --><!--
	<Target Name="_RemoveStaticWebAssetsDevelopmentManifest"
			BeforeTargets="GetCopyToOutputDirectoryItems"
			DependsOnTargets="ResolveProjectReferences">
		<ItemGroup>
			<ContentWithTargetPath Remove="$(StaticWebAssetDevelopmentManifestPath)" />
		</ItemGroup>
	</Target>

	--><!-- 
    Custom target to copy the _content folder manually after publishing.
    This is useful if the default static web assets pipeline does not export _content.
    (Razor Class Libraries normally map their static assets into _content.)
  --><!--
	<Target Name="CopyStaticWebAssets" AfterTargets="Publish">
		<Message Text="Copying _content folder manually" Importance="High" />
		<ItemGroup>
			<StaticContentFiles Include="$(MSBuildProjectDirectory)\wwwroot\_content\**\*.*" />
		</ItemGroup>
		<Copy SourceFiles="@(StaticContentFiles)"
			  DestinationFolder="$(PublishDir)wwwroot\_content\%(RecursiveDir)"
			  SkipUnchangedFiles="true" />
	</Target>-->
</Project>
